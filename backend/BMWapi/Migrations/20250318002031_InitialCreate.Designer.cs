// <auto-generated />
using BMWApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BMWApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250318002031_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BMWApi.Models.CarExtras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdaptiveCruiseControl")
                        .HasColumnType("bit");

                    b.Property<int>("AdaptiveCruiseControlPrice")
                        .HasColumnType("int");

                    b.Property<bool>("AutoDimmingMirrors")
                        .HasColumnType("bit");

                    b.Property<int>("AutoDimmingMirrorsPrice")
                        .HasColumnType("int");

                    b.Property<bool>("BlindSpotMonitoring")
                        .HasColumnType("bit");

                    b.Property<int>("BlindSpotMonitoringPrice")
                        .HasColumnType("int");

                    b.Property<bool>("CameraSystem360")
                        .HasColumnType("bit");

                    b.Property<int>("CameraSystem360Price")
                        .HasColumnType("int");

                    b.Property<bool>("CupHolders")
                        .HasColumnType("bit");

                    b.Property<int>("CupHoldersPrice")
                        .HasColumnType("int");

                    b.Property<bool>("DriverAssistancePackage")
                        .HasColumnType("bit");

                    b.Property<int>("DriverAssistancePackagePrice")
                        .HasColumnType("int");

                    b.Property<bool>("HeatedSeats")
                        .HasColumnType("bit");

                    b.Property<int>("HeatedSeatsPrice")
                        .HasColumnType("int");

                    b.Property<bool>("HeatedSteeringWheel")
                        .HasColumnType("bit");

                    b.Property<int>("HeatedSteeringWheelPrice")
                        .HasColumnType("int");

                    b.Property<bool>("KeylessEntry")
                        .HasColumnType("bit");

                    b.Property<int>("KeylessEntryPrice")
                        .HasColumnType("int");

                    b.Property<bool>("LaneAssist")
                        .HasColumnType("bit");

                    b.Property<int>("LaneAssistPrice")
                        .HasColumnType("int");

                    b.Property<bool>("MemorySeats")
                        .HasColumnType("bit");

                    b.Property<int>("MemorySeatsPrice")
                        .HasColumnType("int");

                    b.Property<bool>("NavigationSystem")
                        .HasColumnType("bit");

                    b.Property<int>("NavigationSystemPrice")
                        .HasColumnType("int");

                    b.Property<bool>("PanRoof")
                        .HasColumnType("bit");

                    b.Property<int>("PanRoofPrice")
                        .HasColumnType("int");

                    b.Property<bool>("ParkAssist")
                        .HasColumnType("bit");

                    b.Property<int>("ParkAssistPrice")
                        .HasColumnType("int");

                    b.Property<bool>("PowerLiftgate")
                        .HasColumnType("bit");

                    b.Property<int>("PowerLiftgatePrice")
                        .HasColumnType("int");

                    b.Property<bool>("PremiumSoundSystem")
                        .HasColumnType("bit");

                    b.Property<int>("PremiumSoundSystemPrice")
                        .HasColumnType("int");

                    b.Property<bool>("RemoteStart")
                        .HasColumnType("bit");

                    b.Property<int>("RemoteStartPrice")
                        .HasColumnType("int");

                    b.Property<bool>("TrafficSignRecognition")
                        .HasColumnType("bit");

                    b.Property<int>("TrafficSignRecognitionPrice")
                        .HasColumnType("int");

                    b.Property<bool>("UpgradedAlloys")
                        .HasColumnType("bit");

                    b.Property<int>("UpgradedAlloysPrice")
                        .HasColumnType("int");

                    b.Property<bool>("VentilatedSeats")
                        .HasColumnType("bit");

                    b.Property<int>("VentilatedSeatsPrice")
                        .HasColumnType("int");

                    b.Property<bool>("WirelessCharging")
                        .HasColumnType("bit");

                    b.Property<int>("WirelessChargingPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CarExtras");
                });

            modelBuilder.Entity("BMWApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
